#!/usr/bin/env bash
clear -x
set -eu -o pipefail #-x

RED=$(tput setaf 1)
GREEN=$(tput setaf 2)
YELLOW=$(tput setaf 3)
BLUE=$(tput setaf 4)
MAGENTA=$(tput setaf 5)
CYAN=$(tput setaf 6)
RESETCOLOR=$(tput sgr0)

declare -A FILE_LIST
FILE_LIST=(
    ["zshrcZinit"]="${HOME}/.zshrc"
    ["gitconfig"]="${HOME}/.gitconfig"
    ["mpv"]="${HOME}/.config/mpv"
    ["wezterm.lua"]="${HOME}/.config/wezterm/wezterm.lua"
    ["Preferences.sublime-settings.json"]="${HOME}/.config/sublime-text/Packages/User/Preferences.sublime-settings"
    ["terminator.config"]="${HOME}/.config/terminator/config"
    ["starship.toml"]="${HOME}/.config/starship.toml"
    ["alacritty.yml"]="${HOME}/.config/alacritty/alacritty.yml"
    ["bottom.toml"]="${HOME}/.config/bottom/bottom.toml"
    ["htoprc"]="${HOME}/.config/htop/htoprc"
    ["microSettings.json"]="${HOME}/.config/micro/settings.json"
    ["p10kClean.zsh"]="${HOME}/.p10k.zsh"
    ["p10kFancy.zsh"]="${HOME}/.p10k.zsh"
)

addFile() {
    if [ -z "$1" ]; then
        echo >&2 "${RED}No argument supplied${RESETCOLOR}"
        return 1
    fi

    read -p "${CYAN}add ${YELLOW}${1}${CYAN}? [y/N]: ${RESETCOLOR}" -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        return 0
    fi
    return 1
}

chooseFromList() {
    for (( i=1; i<=${#}-1; i++ )) do
        echo "${CYAN}[   ${i}   ]${RESETCOLOR} $(eval echo \$"${i}")"
    done
    echo "${CYAN}[ Enter ]${RESETCOLOR} $(eval echo \"\$\{${#}\}\")"
    read -p "${YELLOW}Enter a choice: ${RESETCOLOR}" -r
}

while true; do
    chooseFromList "Symlink dotfiles" "Install fonts" "Install fzf" "Install exa" "No sudo password" "Install VSCode Extensions" "Exit"
    echo
    if [[ -z $REPLY ]]; then exit; fi
    case $REPLY in
        1)  mkdir --parents --verbose .current-files/
            for file in "${!FILE_LIST[@]}"; do
                if addFile "$file"; then
                    destination="${FILE_LIST[$file]}"
                    mkdir --parents --verbose "$(dirname "$destination")"
                    cp "$file" .current-files/
                    ln --symbolic --verbose --force --relative .current-files/"$file" "$destination"
                fi
            done;;

        2)  mkdir --parents --verbose ~/.local/share/fonts/
            cp --archive fonts/. ~/.local/share/fonts/
            fc-cache --force --verbose;;

        3)  git clone --depth=1 https://github.com/junegunn/fzf.git ~/.fzf
            ~/.fzf/install;;

        4)  echo "${CYAN}Downloading exa..${RESETCOLOR}"
            curl -s https://api.github.com/repos/ogham/exa/releases/latest \
                | grep "exa-linux-x86_64-v" \
                | cut -d : -f 2,3 \
                | tr -d \" \
                | wget -i -
            echo "${CYAN}Unzipping exa..${RESETCOLOR}"

            # unzip -j exa*.zip bin/exa -d /usr/local/bin
            # unzip -j exa*.zip man/exa.1 -d /usr/share/man/man1
            # unzip -j exa*.zip completions/exa.zsh -d /usr/local/share/zsh/site-functions
            unzip -j exa*.zip bin/exa man/exa.1 completions/exa.zsh
            sudo mv --verbose exa /usr/local/bin/exa
            sudo mv --verbose exa.1 /usr/share/man/man1 #manpath something
            sudo mv --verbose exa.zsh /usr/local/share/zsh/site-functions # maybe just /usr/share/zsh/site-functions
            rm exa*.zip;;

        5)  echo "$(whoami) ALL=(ALL) NOPASSWD: ALL"
            read -n 1 -s -r -p "${YELLOW}Press any key to continue: ${RESETCOLOR}"
            sudo visudo
            ;;

        6)  # Check if code command exists
            command -v code &>/dev/null && \
            while IFS="" read -r line || [ -n "$line" ]; do # safe way of reading a file... i think -> https://stackoverflow.com/questions/1521462/looping-through-the-content-of-a-file-in-bash
                code --install-extension "$line"
            done < ./VSCodeExtensions.txt
            ;;

        *)  echo >&2 "${RED}Error: Not a valid input${RESETCOLOR}";;
    esac
    echo
done
