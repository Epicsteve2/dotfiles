# examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'github_username/plugin_name#branch'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'
# set -g @override_copy_command 'xclip -in -selection clipboard'
# set -g @yank_selection 'secondary'
# set -g @yank_selection 'primary'
# powerline at bottom


set -g @plugin 'wfxr/tmux-power'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
# wayland makes this tricky
# set -g @continuum-boot 'on' # doesn't work cuz https://github.com/tmux-plugins/tmux-resurrect/issues/332
set -g @continuum-systemd-start-cmd 'start-server'
set -g @continuum-restore 'on'
set -g @plugin 'tmux-plugins/tmux-pain-control'
set -g @resurrect-processes 'false'

set -g mouse on

# Start windows and panes at 1, not 0
set -g base-index 1
set -g pane-base-index 1
set-window-option -g pane-base-index 1
set-option -g renumber-windows on

# idk, colors I think
set-option -sa terminal-overrides ",xterm*:Tc"
# set -g default-terminal "xterm-256color"
# Undercurl. idk what this is from, but this doesn't really work...
# nvm, found from https://github.com/folke/tokyonight.nvim
# set -g default-terminal "${TERM}"
# set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
# set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0

# set vi-mode
set-window-option -g mode-keys vi
# keybindings for visual select
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel
# for keyboard swipe
bind-key -n C-NPage next-window
bind-key -n C-PPage previous-window
# fix home and end
bind-key -n Home send Escape "[H"
bind-key -n End send Escape "[F" 

# when splitting pane, keep directory
# I don't think this is needed with tmux-pain-control
# bind '"' split-window -v -c "#{pane_current_path}"
# bind % split-window -h -c "#{pane_current_path}"

# # set ctrl-a as prefix key as well
# set-option -g prefix2 C-a
# bind C-a send-prefix -2

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
# But this is the nvim version https://github.com/alexghergh/nvim-tmux-navigation
# Also need to put this after running tpm to override keybind

# decide whether we're in a Vim process
# commenting out for now to fix ctrl-backspace for bash
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

# # I want prefix key
# bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
# bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
# bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
# bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'
# bind-key -n 'C-Space' if-shell "$is_vim" 'send-keys C-Space' 'select-pane -t:.+'

# bind-key 'h' if-shell "$is_vim" 'send-keys C-w h' 'select-pane -L'
# unbind-key h
# unbind-key j
# unbind-key k
# unbind-key l
bind-key 'h' if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
bind-key 'j' if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
bind-key 'k' if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
bind-key 'l' if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'

bind-key Left if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
bind-key Down if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
bind-key Up if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
bind-key Right if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'

if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key 'Space' if-shell "$is_vim" 'send-keys C-Space' 'select-pane -t:.+'

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
bind-key -T copy-mode-vi 'C-Space' select-pane -t:.+

## Prevent from exiting copy mode when dragging with mouse
# bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-selection -x


set -g default-terminal "alacritty"

## make new window next to current window
# bind c new-window -a
