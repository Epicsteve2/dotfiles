--- /mnt/c/Users/Stephen/CodeMonkey/dotfiles/nvim/init.lua	2023-01-09 15:28:29.485886500 -0500
+++ /mnt/c/Users/Stephen/AppData/Local/nvim/lua/user/init.lua	2023-01-09 15:26:08.818347300 -0500
@@ -53,18 +53,18 @@
         "kylechui/nvim-surround",
         config = function() require("nvim-surround").setup {} end,
       },
-      {
-        "declancm/cinnamon.nvim",
-        config = function()
-          require('cinnamon').setup {
-            extra_keymaps = true,
-            extended_keymaps = true,
-            override_keymaps = true,
-            always_scroll = true,
-            scroll_limit = 250,
-          }
-        end,
-      },
+      -- {
+      --   "declancm/cinnamon.nvim",
+      --   config = function()
+      --     require('cinnamon').setup {
+      --       extra_keymaps = true,
+      --       extended_keymaps = true,
+      --       override_keymaps = true,
+      --       always_scroll = true,
+      --       scroll_limit = 250,
+      --     }
+      --   end,
+      -- },
       {
         "simrat39/rust-tools.nvim",
         after = "mason-lspconfig.nvim", -- make sure to load after mason-lspconfig
@@ -125,27 +125,48 @@
         event = "VimEnter",
         config = function()
           require('session_manager').setup {
-
             autoload_mode = require('session_manager.config').AutoloadMode.CurrentDir,
           }
         end
       },
+      -- it just doesn't work...
+      -- {
+      --   "LhKipp/nvim-nu",
+      --   -- event = "VimEnter",
+      --   -- do = ":TSInstall nu",
+      --   config = function()
+      --     require'nvim-nu'.setup{}
+      --   end
+      -- },
+      -- { "akinsho/toggleterm.nvim",
+      --   config = function()
+      --           require("toggleterm").setup{
+      --                   shell = "nu"
+      --           }
+      --   end
+      -- }
     },
 
-    ["mason-lspconfig"] = {
-      ensure_installed = { "rust_analyzer", "tsserver" }, -- install rust_analyzer
-    },
+    -- ["mason-lspconfig"] = {
+    --   ensure_installed = { "rust_analyzer", "tsserver" }, -- install rust_analyzer
+    -- },
+
+    ["toggleterm"] = function(config)
+      config.shell = "nu"
+      return config
+    end,
     ["cmp"] = function(config)
       local cmp = require 'cmp'
+
       cmp.setup {
         completion = {
+          -- auto select first completion
           completeopt = 'menu,menuone,noinsert'
         }
       }
       cmp.setup.filetype({ 'markdown' }, {
         enabled = false,
       })
-      return config
     end,
 
     -- {
@@ -209,6 +230,16 @@
     -- typescript-language-server
   },
 
+  -- cmp.setup {
+  --   completion = {
+  --     -- auto select first completion
+  --     completeopt = 'menu,menuone,noinsert'
+  --   },
+  -- },
+  -- cmp.setup.filetype({ 'markdown' }, {
+  --   enabled = false,
+  -- }),
+
   mappings = {
     n = {
       -- Make ctrl+backspace work
@@ -234,25 +265,30 @@
   --     sonokai_style = "shusia"
   --   }
   -- },
-  highlights = {
-    -- apply highlight group to all colorschemes (include the default_theme)
-    init = {
-      -- set the transparency for all of these highlight groups
-      Normal = { bg = "NONE", ctermbg = "NONE" },
-      NormalNC = { bg = "NONE", ctermbg = "NONE" },
-      CursorColumn = { cterm = {}, ctermbg = "NONE", ctermfg = "NONE" },
-      CursorLine = { cterm = {}, ctermbg = "NONE", ctermfg = "NONE" },
-      CursorLineNr = { cterm = {}, ctermbg = "NONE", ctermfg = "NONE" },
-      LineNr = {},
-      SignColumn = {},
-      StatusLine = {},
-      NeoTreeNormal = { bg = "NONE", ctermbg = "NONE" },
-      NeoTreeNormalNC = { bg = "NONE", ctermbg = "NONE" },
-    },
-  },
+  -- highlights = {
+  --   -- apply highlight group to all colorschemes (include the default_theme)
+  --   init = {
+  --     -- set the transparency for all of these highlight groups
+  --     Normal = { bg = "NONE", ctermbg = "NONE" },
+  --     NormalNC = { bg = "NONE", ctermbg = "NONE" },
+  --     CursorColumn = { cterm = {}, ctermbg = "NONE", ctermfg = "NONE" },
+  --     CursorLine = { cterm = {}, ctermbg = "NONE", ctermfg = "NONE" },
+  --     CursorLineNr = { cterm = {}, ctermbg = "NONE", ctermfg = "NONE" },
+  --     LineNr = {},
+  --     SignColumn = {},
+  --     StatusLine = {},
+  --     NeoTreeNormal = { bg = "NONE", ctermbg = "NONE" },
+  --     NeoTreeNormalNC = { bg = "NONE", ctermbg = "NONE" },
+  --   },
+  -- },
 
   -- taken from https://astronvim.github.io/Recipes/alpha#open-alpha-automatically-when-no-more-buffers
   polish = function()
+    -- windows, set language to english cuz I use japanese locale lol
+    vim.cmd("set langmenu=en_US")
+    vim.cmd("let $LANG = 'en_US'")
+    vim.cmd("source $VIMRUNTIME/delmenu.vim")
+    vim.cmd("source $VIMRUNTIME/menu.vim")
     -- https://github.com/AstroNvim/AstroNvim/issues/1392
     vim.api.nvim_del_augroup_by_name "alpha_settings"
 
